{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DesignerComponents/ButtonResponseComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Handle, Position } from \"react-flow-renderer\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleStyle = {\n  left: 10\n};\nexport default function ButtonResponseComponent(key) {\n  _s();\n\n  const [buttons, setButtons] = useState([]);\n  const [buttonCount, setButtonCount] = useState(0);\n  const cardRef = useRef(null);\n  const [isSaved, setIsSaved] = useState(true);\n\n  const handleCountChange = (event, number) => {\n    console.log(\"Count changed!!\", buttonCount);\n    setButtonCount(parseInt(event.target.value));\n  };\n\n  const handleTextChange = (event, index) => {\n    console.log(\"Value changed for!!\", index);\n    var existingButtons = [...buttons];\n    existingButtons[index] = event.target.value;\n    setButtons(existingButtons);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"user-target-handle-\" + key.data.node_id,\n      isValidConnection: key.data.validationCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: \"90vw\"\n      },\n      ref: cardRef,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            padding: \"8px 15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            color: \"secondary\",\n            sx: {\n              marginBottom: \"6px\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              variant: \"dense\",\n              sx: {\n                minHeight: \"5%\",\n                justifyContent: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"black\",\n                component: \"div\",\n                sx: {\n                  lineHeight: \"15px\",\n                  fontSize: \"0.75rem\"\n                },\n                children: \"User Response\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Button Count\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"demo-simple-select\",\n              value: buttonCount,\n              label: \"Button Count\" // data-cy=\"select\"\n              ,\n              onChange: handleCountChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), [...Array(parseInt(buttonCount))].map((value, index) => /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Button \" + (index + 1),\n            required: true,\n            onChange: event => {\n              handleTextChange(event, index);\n              setIsSaved(false);\n            },\n            variant: \"outlined\",\n            sx: {\n              margin: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          padding: 0,\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            key.data.updateTextInState(key.type, \"User-\" + key.data.node_id, buttons);\n            setIsSaved(true);\n          },\n          size: \"small\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), isSaved ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 8,\n            fontStyle: \"italic\",\n            marginRight: 8\n          },\n          children: \"Please Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), [...Array(parseInt(buttonCount))].map((value, index) => /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: index.toString()\n      /*id={\"user-source-handle-\"+key.data.node_id+'-'+index}*/\n      ,\n      style: {\n        left: cardRef.current.offsetWidth / (buttonCount + 1) * (index + 1)\n      },\n      isValidConnection: key.data.validationCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(ButtonResponseComponent, \"Jqqz1/+3cglgY5e+G0np5doY+kA=\");\n\n_c = ButtonResponseComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonResponseComponent\");","map":{"version":3,"names":["React","useState","useRef","Card","CardContent","Button","CardActionArea","CardActions","AppBar","Toolbar","Typography","Handle","Position","TextField","handleStyle","left","ButtonResponseComponent","key","buttons","setButtons","buttonCount","setButtonCount","cardRef","isSaved","setIsSaved","handleCountChange","event","number","console","log","parseInt","target","value","handleTextChange","index","existingButtons","Top","data","node_id","validationCallback","maxWidth","padding","marginBottom","borderRadius","minHeight","justifyContent","lineHeight","fontSize","Array","map","margin","display","updateTextInState","type","fontStyle","marginRight","Bottom","toString","current","offsetWidth"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DesignerComponents/ButtonResponseComponent.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Handle, Position } from \"react-flow-renderer\";\nimport TextField from \"@mui/material/TextField\";\nconst handleStyle = { left: 10 };\n\nexport default function ButtonResponseComponent(key) {\n  const [buttons, setButtons] = useState([]);\n  const [buttonCount, setButtonCount] = useState(0);\n  const cardRef = useRef(null);\n  const [isSaved, setIsSaved] = useState(true);\n\n  const handleCountChange = (event, number) => {\n    console.log(\"Count changed!!\", buttonCount);\n    setButtonCount(parseInt(event.target.value));\n  };\n\n  const handleTextChange = (event, index) => {\n    console.log(\"Value changed for!!\", index);\n    var existingButtons = [...buttons];\n    existingButtons[index] = event.target.value;\n    setButtons(existingButtons);\n  };\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id={\"user-target-handle-\" + key.data.node_id}\n        isValidConnection={key.data.validationCallback}\n      />\n      <Card sx={{ maxWidth: \"90vw\" }} key={key} ref={cardRef}>\n        <CardActionArea>\n          <CardContent sx={{ padding: \"8px 15px\" }}>\n            <AppBar\n              position=\"static\"\n              color=\"secondary\"\n              sx={{ marginBottom: \"6px\", borderRadius: \"10px\" }}\n            >\n              <Toolbar\n                variant=\"dense\"\n                sx={{ minHeight: \"5%\", justifyContent: \"center\" }}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"black\"\n                  component=\"div\"\n                  sx={{ lineHeight: \"15px\", fontSize: \"0.75rem\" }}\n                >\n                  User Response\n                </Typography>\n              </Toolbar>\n            </AppBar>\n\n            {/* <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={buttonCount}\n                        label=\"Button Count\"\n                        // data-cy=\"select\"\n                        onChange={(event) => {\n                            console.log('Value Changed')\n                        }}\n                    >\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                    </Select> */}\n            <label>\n              Button Count&nbsp;\n              <select\n                id=\"demo-simple-select\"\n                value={buttonCount}\n                label=\"Button Count\"\n                // data-cy=\"select\"\n                onChange={handleCountChange}\n              >\n                <option value={0}>0</option>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n              </select>\n            </label>\n            <br />\n            <br />\n            {[...Array(parseInt(buttonCount))].map((value, index) => (\n              <TextField\n                id=\"outlined-basic\"\n                label={\"Button \" + (index + 1)}\n                required\n                onChange={(event) => {\n                  handleTextChange(event, index);\n                  setIsSaved(false);\n                }}\n                variant=\"outlined\"\n                sx={{ margin: \"10px\" }}\n              />\n            ))}\n          </CardContent>\n        </CardActionArea>\n        <CardActions\n          sx={{ padding: 0, display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <Button\n            onClick={() => {\n              key.data.updateTextInState(\n                key.type,\n                \"User-\" + key.data.node_id,\n                buttons\n              );\n              setIsSaved(true);\n            }}\n            size=\"small\"\n          >\n            Save\n          </Button>\n          {isSaved ? (\n            <></>\n          ) : (\n            <span style={{ fontSize: 8, fontStyle: \"italic\", marginRight: 8 }}>\n              Please Save\n            </span>\n          )}\n        </CardActions>\n      </Card>\n      {[...Array(parseInt(buttonCount))].map((value, index) => (\n        <Handle\n          type=\"source\"\n          position={Position.Bottom}\n          id={index.toString()}\n          /*id={\"user-source-handle-\"+key.data.node_id+'-'+index}*/ style={{\n            left:\n              (cardRef.current.offsetWidth / (buttonCount + 1)) * (index + 1),\n          }}\n          isValidConnection={key.data.validationCallback}\n        />\n      ))}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}