{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Pages/RunTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import nodeStructure from '../../nodesStructure.json';\n\nimport nodeStructure from \"../../nodesStructureLong.json\";\nimport ChatBubbleComponent from \"../Components/RuntimeComponents/ChatBubbleComponent\"; // class TreeNode {\n//   constructor(info) {\n//     this.label = info.data.label;\n//     this.id = info.id;\n//     this.name = info.name;\n//     this.type =  info.type;\n//     this.children = [];\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RunTime() {\n  _s();\n\n  console.log(nodeStructure);\n  const [executedStages, setExecutedStages] = useState([nodeStructure[0]]); // const nodes = JSON.parse(nodeStructure)\n\n  const handleFlow = event => {\n    console.log(\"Handle Flow called!!!\");\n    console.log(\"Event:\", event);\n    setExecutedStages(prevStage => {\n      console.log(prevStage);\n      let newStage = prevStage;\n\n      if (prevStage[prevStage.length - 1].type == \"startNode\" || prevStage[prevStage.length - 1].type == \"botNode\") {\n        for (let obj of nodeStructure) {\n          if (Object.values(prevStage[prevStage.length - 1].children[0])[0] == obj.id && prevStage[prevStage.length - 1] != obj) newStage = [...prevStage, obj];\n        }\n      } else if (prevStage[prevStage.length - 1].type == \"yesNoNode\") {\n        if (event && event.target.parentElement.id === \"0\") {\n          console.log(\"Yes\");\n\n          for (let obj of nodeStructure) {\n            if (Object.values(prevStage[prevStage.length - 1].children[0])[0] == obj.id && prevStage[prevStage.length - 1] != obj) newStage = [...prevStage, obj];\n          }\n        } else if (event && event.target.parentElement.id === \"1\") {\n          for (let obj of nodeStructure) {\n            if (Object.values(prevStage[prevStage.length - 1].children[1])[0] == obj.id && prevStage[prevStage.length - 1] != obj) newStage = [...prevStage, obj];\n          }\n        }\n      }\n\n      return newStage;\n    });\n  };\n\n  useEffect(() => {\n    handleFlow(); // return () => {\n    // };\n  }\n  /*, []*/\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" This is runtime page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), executedStages.map((currentStage, index) => {\n      // <p>{currentStage.text}</p>\n      // console.log(currentStage);\n      return /*#__PURE__*/_jsxDEV(ChatBubbleComponent, {\n        currentStage: currentStage,\n        handleFlow: handleFlow\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(RunTime, \"TjX2z7axo0yF3ZY3l/fsMvpm1BQ=\");\n\n_c = RunTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"RunTime\");","map":{"version":3,"names":["React","useState","useEffect","nodeStructure","ChatBubbleComponent","RunTime","console","log","executedStages","setExecutedStages","handleFlow","event","prevStage","newStage","length","type","obj","Object","values","children","id","target","parentElement","map","currentStage","index"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Pages/RunTime.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import nodeStructure from '../../nodesStructure.json';\nimport nodeStructure from \"../../nodesStructureLong.json\";\nimport ChatBubbleComponent from \"../Components/RuntimeComponents/ChatBubbleComponent\";\n\n// class TreeNode {\n//   constructor(info) {\n//     this.label = info.data.label;\n//     this.id = info.id;\n//     this.name = info.name;\n//     this.type =  info.type;\n//     this.children = [];\n//   }\n// }\n\nexport default function RunTime() {\n  console.log(nodeStructure);\n  const [executedStages, setExecutedStages] = useState([nodeStructure[0]]);\n  // const nodes = JSON.parse(nodeStructure)\n  const handleFlow = (event) => {\n    console.log(\"Handle Flow called!!!\");\n    console.log(\"Event:\", event);\n    setExecutedStages((prevStage) => {\n      console.log(prevStage);\n      let newStage = prevStage;\n      if (\n        prevStage[prevStage.length - 1].type == \"startNode\" ||\n        prevStage[prevStage.length - 1].type == \"botNode\"\n      ) {\n        for (let obj of nodeStructure) {\n          if (\n            Object.values(prevStage[prevStage.length - 1].children[0])[0] ==\n              obj.id &&\n            prevStage[prevStage.length - 1] != obj\n          )\n            newStage = [...prevStage, obj];\n        }\n      } else if (prevStage[prevStage.length - 1].type == \"yesNoNode\") {\n        if (event && event.target.parentElement.id === \"0\") {\n          console.log(\"Yes\");\n          for (let obj of nodeStructure) {\n            if (\n              Object.values(prevStage[prevStage.length - 1].children[0])[0] ==\n                obj.id &&\n              prevStage[prevStage.length - 1] != obj\n            )\n              newStage = [...prevStage, obj];\n          }\n        } else if (event && event.target.parentElement.id === \"1\") {\n          for (let obj of nodeStructure) {\n            if (\n              Object.values(prevStage[prevStage.length - 1].children[1])[0] ==\n                obj.id &&\n              prevStage[prevStage.length - 1] != obj\n            )\n              newStage = [...prevStage, obj];\n          }\n        }\n      }\n      return newStage;\n    });\n  };\n\n  useEffect(\n    () => {\n      handleFlow();\n      // return () => {\n\n      // };\n    } /*, []*/\n  );\n  return (\n    <>\n      <h1> This is runtime page</h1>\n      {executedStages.map((currentStage, index) => {\n        // <p>{currentStage.text}</p>\n        // console.log(currentStage);\n        return (\n          <ChatBubbleComponent\n            key={index}\n            currentStage={currentStage}\n            handleFlow={handleFlow}\n          />\n        );\n      })}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}