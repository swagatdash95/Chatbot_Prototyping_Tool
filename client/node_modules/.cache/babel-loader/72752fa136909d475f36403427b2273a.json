{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DrawingContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ReactFlow from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Input Node'\n  },\n  position: {\n    x: 250,\n    y: 25\n  }\n}, {\n  id: '2',\n  // you can also pass a React component as a label\n  data: {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Default Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, this)\n  },\n  position: {\n    x: 100,\n    y: 125\n  }\n}, {\n  id: '3',\n  type: 'output',\n  data: {\n    label: 'Output Node'\n  },\n  position: {\n    x: 250,\n    y: 250\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3',\n  animated: true\n}];\n\nfunction Flow() {\n  _s();\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    fitView: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Flow, \"oyPBSKctkSfw1SXqHPGlQofdQkY=\");\n\n_c = Flow;\nexport default Flow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["useState","ReactFlow","initialNodes","id","type","data","label","position","x","y","initialEdges","source","target","animated","Flow","nodes","setNodes","edges","setEdges"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DrawingContainer.js"],"sourcesContent":["import { useState } from 'react';\nimport ReactFlow from 'react-flow-renderer';\n\nconst initialNodes = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'Input Node' },\n    position: { x: 250, y: 25 },\n  },\n\n  {\n    id: '2',\n    // you can also pass a React component as a label\n    data: { label: <div>Default Node</div> },\n    position: { x: 100, y: 125 },\n  },\n  {\n    id: '3',\n    type: 'output',\n    data: { label: 'Output Node' },\n    position: { x: 250, y: 250 },\n  },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2' },\n  { id: 'e2-3', source: '2', target: '3', animated: true },\n];\n\nfunction Flow() {\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n\n  return <ReactFlow nodes={nodes} edges={edges} fitView />;\n}\n\nexport default Flow;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,GADN;EAEEC,IAAI,EAAE,OAFR;EAGEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAT,CAHR;EAIEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE;EAAb;AAJZ,CADmB,EAQnB;EACEN,EAAE,EAAE,GADN;EAEE;EACAE,IAAI,EAAE;IAAEC,KAAK,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAT,CAHR;EAIEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE;EAAb;AAJZ,CARmB,EAcnB;EACEN,EAAE,EAAE,GADN;EAEEC,IAAI,EAAE,QAFR;EAGEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAT,CAHR;EAIEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE;EAAb;AAJZ,CAdmB,CAArB;AAsBA,MAAMC,YAAY,GAAG,CACnB;EAAEP,EAAE,EAAE,MAAN;EAAcQ,MAAM,EAAE,GAAtB;EAA2BC,MAAM,EAAE;AAAnC,CADmB,EAEnB;EAAET,EAAE,EAAE,MAAN;EAAcQ,MAAM,EAAE,GAAtB;EAA2BC,MAAM,EAAE,GAAnC;EAAwCC,QAAQ,EAAE;AAAlD,CAFmB,CAArB;;AAKA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACE,YAAD,CAAlC;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACU,YAAD,CAAlC;EAEA,oBAAO,QAAC,SAAD;IAAW,KAAK,EAAEK,KAAlB;IAAyB,KAAK,EAAEE,KAAhC;IAAuC,OAAO;EAA9C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GALQH,I;;KAAAA,I;AAOT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}