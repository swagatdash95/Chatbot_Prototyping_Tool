{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DrawingContainer.js\";\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { applyEdgeChanges, applyNodeChanges } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DrawingContainer(_ref) {\n  let {\n    nodes,\n    setNodes,\n    edges,\n    setEdges,\n    onConnect,\n    nodeTypes,\n    onNodesChange,\n    onEdgesChange\n  } = _ref;\n  //   const [nodes, setNodes] = useState(initialNodes);\n  //   const [edges, setEdges] = useState([]);\n  //   const yPos = useRef(0);\n  //   const addNode = useCallback(() => {\n  //     yPos.current += 50;\n  //     setNodes((currentNodes) => {\n  //       console.log(currentNodes);\n  //       return [\n  //         ...currentNodes,\n  //         {\n  //           id: Math.random().toString(),\n  //           position: { x: 100, y: yPos.current },\n  //           data:{label: (\n  //                 <>\n  //                 <BotComponent />\n  //                 </>\n  //             )},\n  //             style: {\n  //                 background: '#D6D5E6',\n  //                 width: 200,\n  //             }\n  //         }\n  //       ];\n  //     });\n  //   }, []);\n  // const onNodesChange = useCallback(\n  //   (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\n  //   [setNodes]\n  // );\n  // const onEdgesChange = useCallback(\n  //   (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n  //   [setEdges]\n  // );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onConnect: onConnect,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = DrawingContainer;\nexport default DrawingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawingContainer\");","map":{"version":3,"names":["useState","useRef","useCallback","ReactFlow","applyEdgeChanges","applyNodeChanges","DrawingContainer","nodes","setNodes","edges","setEdges","onConnect","nodeTypes","onNodesChange","onEdgesChange"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DrawingContainer.js"],"sourcesContent":["import { useState, useRef, useCallback } from 'react';\nimport ReactFlow,  { applyEdgeChanges, applyNodeChanges } from 'react-flow-renderer';\n\n\nfunction DrawingContainer({nodes,setNodes, edges, setEdges, onConnect, nodeTypes,onNodesChange,onEdgesChange}) {\n//   const [nodes, setNodes] = useState(initialNodes);\n//   const [edges, setEdges] = useState([]);\n//   const yPos = useRef(0);\n\n//   const addNode = useCallback(() => {\n//     yPos.current += 50;\n//     setNodes((currentNodes) => {\n//       console.log(currentNodes);\n//       return [\n//         ...currentNodes,\n//         {\n//           id: Math.random().toString(),\n//           position: { x: 100, y: yPos.current },\n//           data:{label: (\n//                 <>\n//                 <BotComponent />\n//                 </>\n//             )},\n//             style: {\n//                 background: '#D6D5E6',\n//                 width: 200,\n//             }\n//         }\n//       ];\n//     });\n//   }, []);\n\n\n  // const onNodesChange = useCallback(\n  //   (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\n  //   [setNodes]\n  // );\n  // const onEdgesChange = useCallback(\n  //   (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n  //   [setEdges]\n  // );\n\n\n  return (<>\n      <ReactFlow \n        nodes={nodes} \n        edges={edges} \n        onConnect={onConnect} \n        onNodesChange={onNodesChange} \n        onEdgesChange={onEdgesChange} \n        nodeTypes = {nodeTypes}\n        fitView \n      />\n    </>);\n}\n\nexport default DrawingContainer;\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,SAAP,IAAqBC,gBAArB,EAAuCC,gBAAvC,QAA+D,qBAA/D;;;;AAGA,SAASC,gBAAT,OAA+G;EAAA,IAArF;IAACC,KAAD;IAAOC,QAAP;IAAiBC,KAAjB;IAAwBC,QAAxB;IAAkCC,SAAlC;IAA6CC,SAA7C;IAAuDC,aAAvD;IAAqEC;EAArE,CAAqF;EAC/G;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA,oBAAQ;IAAA,uBACJ,QAAC,SAAD;MACE,KAAK,EAAEP,KADT;MAEE,KAAK,EAAEE,KAFT;MAGE,SAAS,EAAEE,SAHb;MAIE,aAAa,EAAEE,aAJjB;MAKE,aAAa,EAAEC,aALjB;MAME,SAAS,EAAIF,SANf;MAOE,OAAO;IAPT;MAAA;MAAA;MAAA;IAAA;EADI,iBAAR;AAWD;;KAlDQN,gB;AAoDT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}