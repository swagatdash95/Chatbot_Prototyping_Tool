{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport DrawerComponent from './js/Components/Drawer';\nimport { useState } from 'react';\nimport { breadcrumbsClasses } from '@mui/material';\nimport BotComponent from './js/Components/BotComponent';\nimport DrawingComponent from './js/Components/DrawingContainer';\nimport React, { useCallback } from 'react';\nimport YesNoComponent from './js/Components/YesNoComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleSaveToPC = () => {\n  const jsonData = {\n    name: 'ABC',\n    value: {\n      name: 'xyz',\n      value: 123\n    }\n  };\n  const fileData = JSON.stringify(jsonData);\n  const blob = new Blob([fileData], {\n    type: \"text/plain\"\n  });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'treeStructure.json';\n  link.href = url;\n  link.click();\n};\n\nconst UserTextResponse = key => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      backgroundColor: 'green',\n      width: '20vh',\n      height: '10vh',\n      margin: '1vh',\n      padding: '20px',\n      left: '50vh'\n    },\n    children: \"User Text Component\"\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n};\n\n_c = UserTextResponse;\nconst initialNodes = [{\n  id: \"1\",\n  type: \"input\",\n  // input node\n  data: {\n    label: \"Start Node\"\n  },\n  position: {\n    x: 100,\n    y: 0\n  }\n}];\nconst nodeTypes = {\n  yesNoNode: YesNoComponent,\n  botNode: BotComponent\n};\n\nfunction App() {\n  _s();\n\n  const [children, setChildren] = useState([]);\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState([]); // const [userTextResponseChildren,setUserTextResponseChildren] = useState([])\n\n  const addEdge = useCallback(_ref => {\n    let {\n      source,\n      target\n    } = _ref;\n    setEdges(edges => {\n      console.log(source, target);\n      return [...edges, {\n        id: Math.random().toString(),\n        source,\n        target\n      }];\n    });\n  }, []);\n\n  const clickEvent = (event, responseType) => {\n    console.log('Click event at App!!', responseType, event);\n    setNodes(currentNodes => {\n      console.log(currentNodes);\n\n      switch (responseType) {\n        case 'Bot':\n          {\n            return [...currentNodes, {\n              id: Math.random().toString(),\n              position: {\n                x: 100,\n                y: 100\n              },\n              type: 'botNode',\n              // data:{label: (\n              //       <>\n              //       {/* <BotComponent /> */}\n              //       <YesNoComponent />\n              //       </>\n              //   )},\n              style: {\n                background: '#D6D5E6',\n                width: 200\n              }\n            }];\n          }\n          break;\n\n        case 'YesNo':\n          {\n            return [...currentNodes, {\n              id: Math.random().toString(),\n              position: {\n                x: 100,\n                y: 100\n              },\n              type: 'yesNoNode',\n              style: {\n                background: '#D6D5E6',\n                width: 200\n              }\n            }];\n          }\n          break;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DrawerComponent, {\n        clickEvent: clickEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drawing-space\",\n        style: {\n          height: '100vh',\n          width: '100vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(DrawingComponent, {\n          nodes: nodes,\n          setNodes: setNodes,\n          edges: edges,\n          setEdges: setEdges,\n          addEdge: addEdge,\n          nodeTypes: nodeTypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T/Q0T4e846qd7oC0IxxPuQgenpk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserTextResponse\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","DrawerComponent","useState","breadcrumbsClasses","BotComponent","DrawingComponent","React","useCallback","YesNoComponent","handleSaveToPC","jsonData","name","value","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","UserTextResponse","key","backgroundColor","width","height","margin","padding","left","initialNodes","id","data","label","position","x","y","nodeTypes","yesNoNode","botNode","App","children","setChildren","nodes","setNodes","edges","setEdges","addEdge","source","target","console","log","Math","random","toString","clickEvent","event","responseType","currentNodes","style","background","display"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport DrawerComponent from './js/Components/Drawer';\nimport { useState } from 'react';\nimport { breadcrumbsClasses } from '@mui/material';\nimport BotComponent from './js/Components/BotComponent';\nimport DrawingComponent from './js/Components/DrawingContainer';\nimport React, {useCallback} from 'react';\nimport YesNoComponent from './js/Components/YesNoComponent';\n\nconst handleSaveToPC = () => {\n  const jsonData = {name:'ABC', value: {name:'xyz', value: 123}}\n  const fileData = JSON.stringify(jsonData);\n  const blob = new Blob([fileData], {type: \"text/plain\"});\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'treeStructure.json';\n  link.href = url;\n  link.click();\n}\n\nconst UserTextResponse = (key) => {\n  return (<span style = {{backgroundColor:'green',width:'20vh',height:'10vh',margin:'1vh',padding:'20px',left:'50vh'}} key = {key}>User Text Component</span>);\n};\n\nconst initialNodes = [\n      {\n          id: \"1\",\n          type: \"input\", // input node\n          data: { label: \"Start Node\" },\n          position: { x: 100, y: 0 }\n      }\n]\n\nconst nodeTypes = { yesNoNode: YesNoComponent,\n  botNode: BotComponent };\n\nfunction App() {\n  const [children, setChildren] = useState([])\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState([]);\n  // const [userTextResponseChildren,setUserTextResponseChildren] = useState([])\n\n  const addEdge = useCallback(({ source, target }) => {\n    setEdges((edges) => {\n      console.log(source, target);\n      return [\n        ...edges,\n        {\n          id: Math.random().toString(),\n          source,\n          target\n        }\n      ];\n    });\n  }, []);\n\n  const clickEvent = (event,responseType) =>{\n    console.log('Click event at App!!',responseType,event)\n      setNodes((currentNodes) => {\n        console.log(currentNodes);\n        switch(responseType){\n          case 'Bot': {\n            return [\n              ...currentNodes,\n              {\n                id: Math.random().toString(),\n                position: { x: 100, y: 100 },\n                type : 'botNode',\n                // data:{label: (\n                //       <>\n                //       {/* <BotComponent /> */}\n                //       <YesNoComponent />\n                //       </>\n                //   )},\n                  style: {\n                      background: '#D6D5E6',\n                      width: 200,\n                  }\n              }\n            ];\n          }\n          break;\n          case 'YesNo': {\n            return [\n              ...currentNodes,\n              {\n                id: Math.random().toString(),\n                position: { x: 100, y: 100 },\n                type : 'yesNoNode',\n                  style: {\n                      background: '#D6D5E6',\n                      width: 200,\n                  }\n              }\n            ];\n          }\n          break;\n        }\n      });\n    }\n\n\n  return (\n    <div className=\"App\">\n      {/* <DrawingComponent /> */}\n      <div className='app-body' style={{display:'flex'}}>\n        <DrawerComponent clickEvent = {clickEvent} />\n        <div className = 'drawing-space' style = {{height:'100vh',width:'100vw'}}>\n          <DrawingComponent nodes = {nodes} setNodes = {setNodes} edges = {edges} setEdges = {setEdges} addEdge = {addEdge} nodeTypes = {nodeTypes}/>\n        </div>\n        <br/>\n        {/* <button className = 'SaveButton' onClick = {handleSaveToPC}>Save JSON</button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}