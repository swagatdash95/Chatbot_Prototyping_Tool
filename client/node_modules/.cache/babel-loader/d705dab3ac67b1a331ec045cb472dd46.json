{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport DrawerComponent from './js/Components/Drawer';\nimport { useState } from 'react';\nimport { breadcrumbsClasses } from '@mui/material';\nimport BotComponent from './js/Components/BotComponent';\nimport DrawingComponent from './js/Components/DrawingContainer';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst handleSaveToPC = () => {\n  const jsonData = {\n    name: 'ABC',\n    value: {\n      name: 'xyz',\n      value: 123\n    }\n  };\n  const fileData = JSON.stringify(jsonData);\n  const blob = new Blob([fileData], {\n    type: \"text/plain\"\n  });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'treeStructure.json';\n  link.href = url;\n  link.click();\n};\n\nconst UserTextResponse = key => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      backgroundColor: 'green',\n      width: '20vh',\n      height: '10vh',\n      margin: '1vh',\n      padding: '20px',\n      left: '50vh'\n    },\n    children: \"User Text Component\"\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }, this);\n};\n\n_c = UserTextResponse;\nconst initialNodes = [{\n  id: \"1\",\n  type: \"input\",\n  // input node\n  data: {\n    label: \"Input Node\"\n  },\n  position: {\n    x: 100,\n    y: 0\n  }\n}];\n\nfunction App() {\n  _s();\n\n  const [children, setChildren] = useState([]);\n  const [nodes, setNodes] = useState(initialNodes); // const [userTextResponseChildren,setUserTextResponseChildren] = useState([])\n\n  const clickEvent = (event, responseType) => {\n    console.log('Click event at App!!', responseType, event);\n    setNodes(currentNodes => {\n      console.log(currentNodes);\n\n      switch (responseType) {\n        case 'Bot':\n          {\n            return [...currentNodes, {\n              id: Math.random().toString(),\n              position: {\n                x: 100,\n                y: 200\n              },\n              data: {\n                label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(BotComponent, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false)\n              },\n              style: {\n                background: '#D6D5E6',\n                width: 200\n              }\n            }];\n          }\n          break;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DrawerComponent, {\n        clickEvent: clickEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drawing-space\",\n        style: {\n          height: '90vh',\n          width: '100vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(DrawingComponent, {\n          nodes: nodes,\n          setNodes: setNodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5zyZCbuYr3oan42+Q/XfvjBpZc8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserTextResponse\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","DrawerComponent","useState","breadcrumbsClasses","BotComponent","DrawingComponent","React","handleSaveToPC","jsonData","name","value","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","UserTextResponse","key","backgroundColor","width","height","margin","padding","left","initialNodes","id","data","label","position","x","y","App","children","setChildren","nodes","setNodes","clickEvent","event","responseType","console","log","currentNodes","Math","random","toString","style","background","display"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport DrawerComponent from './js/Components/Drawer';\nimport { useState } from 'react';\nimport { breadcrumbsClasses } from '@mui/material';\nimport BotComponent from './js/Components/BotComponent';\nimport DrawingComponent from './js/Components/DrawingContainer';\nimport React from 'react';\n\nconst handleSaveToPC = () => {\n  const jsonData = {name:'ABC', value: {name:'xyz', value: 123}}\n  const fileData = JSON.stringify(jsonData);\n  const blob = new Blob([fileData], {type: \"text/plain\"});\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'treeStructure.json';\n  link.href = url;\n  link.click();\n}\n\nconst UserTextResponse = (key) => {\n  return (<span style = {{backgroundColor:'green',width:'20vh',height:'10vh',margin:'1vh',padding:'20px',left:'50vh'}} key = {key}>User Text Component</span>);\n};\n\nconst initialNodes = [\n      {\n          id: \"1\",\n          type: \"input\", // input node\n          data: { label: \"Input Node\" },\n          position: { x: 100, y: 0 }\n      }\n]\n\nfunction App() {\n  const [children, setChildren] = useState([])\n  const [nodes, setNodes] = useState(initialNodes);\n  // const [userTextResponseChildren,setUserTextResponseChildren] = useState([])\n\n  const clickEvent = (event,responseType) =>{\n    console.log('Click event at App!!',responseType,event)\n      setNodes((currentNodes) => {\n        console.log(currentNodes);\n        switch(responseType){\n          case 'Bot': {\n            return [\n              ...currentNodes,\n              {\n                id: Math.random().toString(),\n                position: { x: 100, y: 200 },\n                data:{label: (\n                      <>\n                      <BotComponent />\n                      </>\n                  )},\n                  style: {\n                      background: '#D6D5E6',\n                      width: 200,\n                  }\n              }\n            ];\n          }\n          break;\n        }\n      });\n    }\n\n\n  return (\n    <div className=\"App\">\n      {/* <DrawingComponent /> */}\n      <div className='app-body' style={{display:'flex'}}>\n        <DrawerComponent clickEvent = {clickEvent} />\n        <div className = 'drawing-space' style = {{height:'90vh',width:'100vw'}}>\n          <DrawingComponent nodes = {nodes} setNodes = {setNodes}/>\n        </div>\n        <br/>\n        {/* <button className = 'SaveButton' onClick = {handleSaveToPC}>Save JSON</button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}