{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Pages/RunTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport nodeStructure from '../../nodesStructure.json'; // class TreeNode {\n//   constructor(info) {\n//     this.label = info.data.label;\n//     this.id = info.id;\n//     this.name = info.name;\n//     this.type =  info.type;\n//     this.children = [];\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RunTime() {\n  _s();\n\n  console.log(nodeStructure);\n  const [executedStages, setExecutedStages] = useState([nodeStructure[0]]); // const nodes = JSON.parse(nodeStructure)\n\n  useEffect(() => {\n    return () => {\n      setExecutedStages(prevStage => {\n        console.log(prevStage);\n\n        if (prevStage[prevStage.length - 1].type == \"startNode\" || prevStage[prevStage.length - 1].type == \"botNode\") {\n          let newStage = [...prevStage];\n\n          for (let obj of nodeStructure) {\n            if (Object.values(prevStage[0].children[0])[0] == obj.id && prevStage[prevStage.length - 1] != obj) newStage = [...prevStage, obj];\n          }\n\n          return newStage;\n        }\n      });\n    };\n  }\n  /*, []*/\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" This is runtime page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), executedStages.map(currentStage => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentStage.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n\n_s(RunTime, \"TjX2z7axo0yF3ZY3l/fsMvpm1BQ=\");\n\n_c = RunTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"RunTime\");","map":{"version":3,"names":["React","useState","useEffect","nodeStructure","RunTime","console","log","executedStages","setExecutedStages","prevStage","length","type","newStage","obj","Object","values","children","id","map","currentStage","text"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Pages/RunTime.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport nodeStructure from '../../nodesStructure.json';\n\n// class TreeNode {\n//   constructor(info) {\n//     this.label = info.data.label;\n//     this.id = info.id;\n//     this.name = info.name;\n//     this.type =  info.type;\n//     this.children = [];\n//   }\n// }\n\nexport default function RunTime() {\n  console.log(nodeStructure)\n  const [executedStages, setExecutedStages] = useState([nodeStructure[0]])\n  // const nodes = JSON.parse(nodeStructure)\n  useEffect(() => {\n    return () => {\n      setExecutedStages(prevStage => {\n        console.log(prevStage)\n        if(prevStage[prevStage.length-1].type == \"startNode\" || prevStage[prevStage.length-1].type == \"botNode\")\n        { \n          let newStage = [...prevStage]\n          for(let obj of nodeStructure)\n          {\n            if(Object.values(prevStage[0].children[0])[0]==obj.id && prevStage[prevStage.length-1]!= obj)\n              newStage =  [...prevStage,obj]\n          } \n          return newStage\n        }\n      })\n    };\n  }/*, []*/)\n  return (\n    <>\n        <h1> This is runtime page</h1>\n        {executedStages.map((currentStage)=>(\n          <p>{currentStage.text}</p>\n        ))}\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAChCC,OAAO,CAACC,GAAR,CAAYH,aAAZ;EACA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAACE,aAAa,CAAC,CAAD,CAAd,CAAD,CAApD,CAFgC,CAGhC;;EACAD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXM,iBAAiB,CAACC,SAAS,IAAI;QAC7BJ,OAAO,CAACC,GAAR,CAAYG,SAAZ;;QACA,IAAGA,SAAS,CAACA,SAAS,CAACC,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,IAA9B,IAAsC,WAAtC,IAAqDF,SAAS,CAACA,SAAS,CAACC,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,IAA9B,IAAsC,SAA9F,EACA;UACE,IAAIC,QAAQ,GAAG,CAAC,GAAGH,SAAJ,CAAf;;UACA,KAAI,IAAII,GAAR,IAAeV,aAAf,EACA;YACE,IAAGW,MAAM,CAACC,MAAP,CAAcN,SAAS,CAAC,CAAD,CAAT,CAAaO,QAAb,CAAsB,CAAtB,CAAd,EAAwC,CAAxC,KAA4CH,GAAG,CAACI,EAAhD,IAAsDR,SAAS,CAACA,SAAS,CAACC,MAAV,GAAiB,CAAlB,CAAT,IAAgCG,GAAzF,EACED,QAAQ,GAAI,CAAC,GAAGH,SAAJ,EAAcI,GAAd,CAAZ;UACH;;UACD,OAAOD,QAAP;QACD;MACF,CAZgB,CAAjB;IAaD,CAdD;EAeD;EAAA;EAhBQ,CAAT;EAiBA,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKL,cAAc,CAACW,GAAf,CAAoBC,YAAD,iBAClB;MAAA,UAAIA,YAAY,CAACC;IAAjB;MAAA;MAAA;MAAA;IAAA,QADD,CAFL;EAAA,gBADF;AAQD;;GA7BuBhB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}