{"ast":null,"code":"var _jsxFileName = \"/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DesignerComponents/ButtonResponseComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Handle, Position } from 'react-flow-renderer';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleStyle = {\n  left: 10\n};\nexport default function ButtonResponseComponent(key) {\n  _s();\n\n  const [buttons, setButtons] = useState([]);\n  const [buttonCount, setButtonCount] = useState(0);\n  const cardRef = useRef(null);\n  const [isSaved, setIsSaved] = useState(true);\n\n  const handleCountChange = (event, number) => {\n    console.log('Count changed!!', buttonCount);\n    setButtonCount(parseInt(event.target.value));\n  };\n\n  const handleTextChange = (event, index) => {\n    console.log('Value changed for!!', index);\n    var existingButtons = [...buttons];\n    existingButtons[index] = event.target.value;\n    setButtons(existingButtons);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"user-target-handle-\" + key.data.node_id,\n      isValidConnection: key.data.validationCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: '90vw'\n      },\n      ref: cardRef,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            padding: '8px 15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            color: \"secondary\",\n            sx: {\n              marginBottom: '6px',\n              borderRadius: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              variant: \"dense\",\n              sx: {\n                minHeight: '5%',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"black\",\n                component: \"div\",\n                sx: {\n                  lineHeight: '15px',\n                  fontSize: \"0.75rem\"\n                },\n                children: \"User Response\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Button Count\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"demo-simple-select\",\n              value: buttonCount,\n              label: \"Button Count\" // data-cy=\"select\"\n              ,\n              onChange: handleCountChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), [...Array(parseInt(buttonCount))].map((value, index) => /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Button \" + (index + 1),\n            required: true,\n            onChange: event => {\n              handleTextChange(event, index);\n              setIsSaved(false);\n            },\n            variant: \"outlined\",\n            sx: {\n              margin: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          padding: 0,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            key.data.updateTextInState(key.type, 'User-' + key.data.node_id, buttons);\n            setIsSaved(true);\n          },\n          size: \"small\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), isSaved ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 8,\n            fontStyle: 'italic',\n            marginRight: 8\n          },\n          children: \"Please Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), [...Array(parseInt(buttonCount))].map((value, index) => /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: index.toString()\n      /*id={\"user-source-handle-\"+key.data.node_id+'-'+index}*/\n      ,\n      style: {\n        left: cardRef.current.offsetWidth / (buttonCount + 1) * (index + 1)\n      },\n      isValidConnection: key.data.validationCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n}\n\n_s(ButtonResponseComponent, \"Jqqz1/+3cglgY5e+G0np5doY+kA=\");\n\n_c = ButtonResponseComponent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonResponseComponent\");","map":{"version":3,"names":["React","useState","useRef","Card","CardContent","Button","CardActionArea","CardActions","AppBar","Toolbar","Typography","Handle","Position","TextField","handleStyle","left","ButtonResponseComponent","key","buttons","setButtons","buttonCount","setButtonCount","cardRef","isSaved","setIsSaved","handleCountChange","event","number","console","log","parseInt","target","value","handleTextChange","index","existingButtons","Top","data","node_id","validationCallback","maxWidth","padding","marginBottom","borderRadius","minHeight","justifyContent","lineHeight","fontSize","Array","map","margin","display","updateTextInState","type","fontStyle","marginRight","Bottom","toString","current","offsetWidth"],"sources":["/Users/swagatdash/Documents/Assignments/Dissertation/bot-gen-z/src/js/Components/DesignerComponents/ButtonResponseComponent.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Handle, Position } from 'react-flow-renderer';\nimport TextField from '@mui/material/TextField';\nconst handleStyle = { left: 10 };\n\n\n\nexport default function ButtonResponseComponent(key){\n    const [buttons, setButtons] = useState([])\n    const [buttonCount, setButtonCount] = useState(0)\n    const cardRef = useRef(null)\n    const [isSaved, setIsSaved] = useState(true)\n\n    const handleCountChange = (event,number) =>{\n        console.log('Count changed!!',buttonCount)\n        setButtonCount(parseInt(event.target.value));\n    }\n\n    const handleTextChange = (event, index) => {\n        console.log('Value changed for!!',index)\n        var existingButtons = [...buttons]\n        existingButtons[index] = event.target.value\n        setButtons(existingButtons)\n    }\n\n    return (\n        <>\n            <Handle type=\"target\" position={Position.Top} id={\"user-target-handle-\"+key.data.node_id} isValidConnection={key.data.validationCallback}/>\n            <Card sx={{ maxWidth: '90vw'}} key = {key} ref = {cardRef}>\n                <CardActionArea>\n                <CardContent sx = {{padding:'8px 15px'}}>\n                    <AppBar position=\"static\" color=\"secondary\" sx = {{marginBottom:'6px',borderRadius:'10px'}}>\n                        <Toolbar variant=\"dense\" sx={{minHeight:'5%',justifyContent:'center'}}>\n                        <Typography variant =\"subtitle1\" color=\"black\" component=\"div\"  sx={{lineHeight:'15px',fontSize :\"0.75rem\"}}>\n                            User Response\n                        </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    \n                    {/* <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={buttonCount}\n                        label=\"Button Count\"\n                        // data-cy=\"select\"\n                        onChange={(event) => {\n                            console.log('Value Changed')\n                        }}\n                    >\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                    </Select> */}\n                    <label>\n                        Button Count&nbsp; \n                        <select\n                            id=\"demo-simple-select\"\n                            value={buttonCount}\n                            label=\"Button Count\"\n                            // data-cy=\"select\"\n                            onChange={handleCountChange}\n                        >\n                            <option value={0} >0</option>\n                            <option value={1} >1</option>\n                            <option value={2}>2</option>\n                            <option value= {3}>3</option>\n                            <option value={4}>4</option>\n                        </select>\n                    </label>\n                    <br />\n                    <br />\n                    {\n                        [...Array(parseInt(buttonCount))].map((value, index)=>(\n                            <TextField id=\"outlined-basic\" label={\"Button \"+(index+1)} required onChange = {(event)=> {handleTextChange(event, index); setIsSaved(false)}} variant=\"outlined\" sx = {{margin:'10px'}}/>\n                        ))\n                        \n\n                    }\n                </CardContent>\n                </CardActionArea>\n                <CardActions sx={{padding:0, display:'flex', justifyContent:'space-between'}}>\n                    <Button onClick = {()=>{key.data.updateTextInState(key.type,'User-'+key.data.node_id,buttons); setIsSaved(true)}} size=\"small\">Save</Button>\n                    {\n                        isSaved?\n                        <></>:\n                        <span style = {{fontSize:8, fontStyle:'italic', marginRight:8}}>Please Save</span>\n                    }\n                </CardActions>\n            </Card>\n            {\n                [...Array(parseInt(buttonCount))].map((value, index)=>(\n                    <Handle type=\"source\" position={Position.Bottom} id = {index.toString()}/*id={\"user-source-handle-\"+key.data.node_id+'-'+index}*/ style={{left: (cardRef.current.offsetWidth/(buttonCount+1)*(index+1))}} isValidConnection={key.data.validationCallback}/>\n                ))\n\n            }\n        </>\n        )\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}